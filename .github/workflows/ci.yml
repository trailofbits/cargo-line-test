name: CI

on:
  merge_group:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  check-up-to-dateness:
    outputs:
      is-up-to-date: ${{ steps.main.outputs.is-up-to-date }}
    runs-on: ubuntu-latest
    steps:
      - id: main
        uses: trailofbits/check-up-to-dateness@main

  test:
    needs: [check-up-to-dateness]

    if: needs.check-up-to-dateness.outputs.is-up-to-date != 'true'

    strategy:
      fail-fast: ${{ github.event_name == 'merge_group' }}
      matrix:
        environment: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.environment }}

    steps:
      - uses: actions/checkout@v5

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install tools
        run: |
          rustup update
          rustup install nightly
          rustup +nightly component add clippy
          cargo install cargo-dylint dylint-link || true
          cargo install cargo-hack               || true
          cargo install cargo-llvm-cov           || true
          cargo install cargo-udeps --locked     || true
          cargo install group-runner             || true

      - name: Build
        run: cargo test --no-run

      - name: Test
        run: cargo test --config "target.'cfg(all())'.runner = 'group-runner'"

  all-checks:
    needs: [test]

    if: ${{ always() }}

    runs-on: ubuntu-latest

    steps:
      - name: Check results
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        run: exit 1
